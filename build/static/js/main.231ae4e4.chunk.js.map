{"version":3,"sources":["redux/actions/types.ts","redux/reducers/AppReducer.ts","redux/reducers/BlockchainReducer.ts","redux/reducers/index.ts","redux/sagas/index.ts","redux/store/index.ts","assets/image/nft1.png","assets/image/nft2.png","assets/image/nft3.png","assets/image/nft4.png","assets/image/nft5.png","assets/image/nft6.png","screens/Dashboard/NftCollection.tsx","assets/image/about.png","screens/Dashboard/Team.tsx","assets/image/roadmap1.svg","assets/image/roadmap2.svg","assets/image/roadmap3.svg","assets/image/roadmap4.svg","screens/Dashboard/Roadmap.tsx","assets/image/slider5.jpg","components/Simulation/Simulation.tsx","components/Layout/Footer/Footer.tsx","assets/image/mint-logo.svg","screens/Dashboard/About.tsx","screens/Dashboard/Dashboard.tsx","redux/actions/BlockchainActions.ts","components/Helper/Services.ts","screens/Mint/Mint.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["INIT_APP","LOGIN_REQUEST","LOGIN_SUCCESS","initialState","loader","username","password","reducer","state","action","type","types","payload","blockchainState","loading","account","TestContract","web3","errorMsg","blockchainReducer","combineReducers","app","AppReducer","blockchain","sagas","all","loggerMiddleware","createLogger","predicate","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","thunk","run","NftCollection","data","id","nftimg","nft","title","subtitle","nft1","nft2","nft4","nft5","nft6","className","Container","Row","map","d","Col","lg","md","src","alt","Team","about","href","Roadmap","xl","order","span","sm","xs","roadmap1","roadmap2","roadmap3","roadmap4","Simulation","dots","infinite","slidesToShow","slidesToScroll","arrows","autoplay","speed","autoplaySpeed","slider5","Footer","About","Dashboard","intContract","dispatch","a","window","ethereum","Web3","TestContractObj","eth","Contract","abi","contractSuccess","isMobile","alert","connectFailed","updateAccount","http","axios","create","baseURL","headers","Services","get","param","post","Mint","useDispatch","useSelector","useState","loding","setLoding","price","setPrice","maxDogwhitelist","setMaxDogWhitelist","whitelistPrice","setWhitelistPrice","total","minted","totalNft","setTotalNft","useEffect","getNftPrice","methods","cost","call","getPrice","whitelistCost","getWhitelistprice","Number","maxDogWhitelist","dogWhitelsitSupply","getTotalMintedNft","number","setNumber","maxSupply","maxSupplay","totalSupply","totalMintToken","mintNft","e","preventDefault","DogWhitelsitSupply","mintedDogList","isInDoglist","saleEndtime","isStartDoglistSale","address","doglistSaleStatus","isWhitelist","status","whitelistLeave","keccak256","String","wallet","tree","MerkleTree","sort","merkleProof","getHexProof","mintprice","utils","toWei","toString","mint","send","from","value","on","hash","waitForReceipt","response","msg","error","receipt","message","cb","getTransactionReceipt","err","console","log","setTimeout","dog","name","method","onSubmit","onClick","request","accounts","location","reload","disabled","substring","slice","AppMain","fallback","exact","path","component","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.231ae4e4.chunk.js","sourcesContent":["export const INIT_APP = 'INIT_APP';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';","import * as types from '../actions/types';\n\nexport interface appStateIF {\n    loader: boolean;\n    username: string | null;\n    password: string | null;\n}\n\nconst initialState: appStateIF = {\n    loader: false,\n    username: null,\n    password: null\n};\n\nconst reducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.INIT_APP:\n            return { ...state, ...action.payload, loader: false };\n        case types.LOGIN_REQUEST:\n            return { ...state, loader: true };\n        case types.LOGIN_SUCCESS:\n            return { ...state, loader: false };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","\nexport interface blockchainStateIF {\n    loading: boolean;\n    account: string | null;\n    TestContract: any | null;\n    web3: any | null;\n    errorMsg: string | '';\n}\n\nconst blockchainState : blockchainStateIF = {\n    loading: false,\n    account: null,\n    TestContract: null,\n    web3: null,\n    errorMsg: \"\" \n};\n  \nconst blockchainReducer = (state = blockchainState, action:any) => {\n    switch(action.type){\n        case \"CONNECTION_REQUEST\":\n            return {\n                ...blockchainState,\n                loading: true,\n            };\n        case \"CONTRACT_SUCCESS\":\n            return {\n                ...state,\n                loading: false,\n                TestContract: action.payload.TestContract\n            };\n        case \"CONNECTION_SUCCESS\":\n            return {\n                ...state,\n                loading: false,\n                account: action.payload.account,\n                web3: action.payload.web3,\n            };\n        case \"CONNECTION_FAILED\":\n            return {\n                ...blockchainState,\n                loading: false,\n                errorMsg: action.payload,\n            };\n        case \"UPDATE_ACCOUNT\":\n            return {\n                ...state,\n                account: action.payload.account,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default blockchainReducer;","import { combineReducers } from 'redux';\nimport AppReducer, { appStateIF } from './AppReducer';\nimport blockchainReducer, { blockchainStateIF } from './BlockchainReducer';\n\nexport interface ReducerStateIF {\n    app: appStateIF;\n    blockchain: blockchainStateIF;\n}\nexport default combineReducers({\n    app: AppReducer,\n    blockchain: blockchainReducer\n});\n","import { all } from 'redux-saga/effects';\n\nexport default function* sagas() {\n    yield all([]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\nimport sagas from '../sagas';\n\n// middleware that logs actions\nconst loggerMiddleware = createLogger({ predicate: () => true });\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    reducers,\n    applyMiddleware(loggerMiddleware, thunk, sagaMiddleware)\n);\n\n// run the saga\nsagaMiddleware.run(sagas);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/nft1.fe51158b.png\";","export default __webpack_public_path__ + \"static/media/nft2.431c2a30.png\";","export default __webpack_public_path__ + \"static/media/nft3.f9753181.png\";","export default __webpack_public_path__ + \"static/media/nft4.c6f220a1.png\";","export default __webpack_public_path__ + \"static/media/nft5.ec321b14.png\";","export default __webpack_public_path__ + \"static/media/nft6.db6cf811.png\";","import { Container , Col, Row } from \"react-bootstrap\";\r\nimport nft from \"../../assets/image/nft1.png\";\r\nimport nft1 from \"../../assets/image/nft2.png\";\r\nimport nft2 from \"../../assets/image/nft3.png\";\r\nimport nft4 from \"../../assets/image/nft4.png\";\r\nimport nft5 from \"../../assets/image/nft5.png\";\r\nimport nft6 from \"../../assets/image/nft6.png\";\r\n\r\nconst NftCollection = () =>{\r\n    const data = [\r\n        {\r\n            id: 1,\r\n            nftimg: nft,\r\n            title: \"Dog Academy\",\r\n            subtitle: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500\",\r\n        },\r\n        {\r\n            id: 2,\r\n            nftimg: nft1,\r\n            title: \"Dog Academy\",\r\n            subtitle: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500\",\r\n        },\r\n        {\r\n            id: 3,\r\n            nftimg: nft2,\r\n            title: \"Dog Academy\",\r\n            subtitle: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500\",\r\n        },\r\n        {\r\n            id: 4,\r\n            nftimg: nft4,\r\n            title: \"Dog Academy\",\r\n            subtitle: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500\",\r\n        },\r\n        {\r\n            id: 5,\r\n            nftimg: nft5,\r\n            title: \"Dog Academy\",\r\n            subtitle: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500\",\r\n        },\r\n        {\r\n            id: 6,\r\n            nftimg: nft6,\r\n            title: \"Dog Academy\",\r\n            subtitle: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500\",\r\n        },\r\n    ]\r\n    return(\r\n        <>\r\n            <div className=\"common nftcollection-main \" >\r\n                <Container>\r\n                    <div className=\"collection-header\">\r\n                        <h5 className=\"title brown\" >The Doge Academy Collection</h5>\r\n                        <p className=\"subtitle\" >The Doge Academy art is deeply researched, hand drawn, and is based primarily on real historical figures throughout history and from all over the world. </p>\r\n                    </div>\r\n                    <Row>\r\n                        {data.map((d) =>(\r\n                            <Col lg={4} md={6} >\r\n                                <div className=\"nft-list\">\r\n                                    <img src={d.nftimg} alt=\"nft-img\" />\r\n                                    <h5>{d.title}</h5>\r\n                                    <p>{d.subtitle}</p>\r\n                                </div>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <hr />\r\n                    <div className=\"collection-footer\" >\r\n                        <h5 className=\"title brown\" >Collect your NFTs now.</h5>\r\n                        <p className=\"subtitle\" >Doge watching in VR wearing mask. Yellow Doge with green Sun Glasses. Yellow Doge with green Sun Glasses.Yellow Doge with.</p>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NftCollection;","export default __webpack_public_path__ + \"static/media/about.04d42195.png\";","import { Col, Container, Row } from \"react-bootstrap\";\r\nimport about from \"../../assets/image/about.png\";\r\n\r\nconst Team = () =>{\r\n    return(\r\n        <>\r\n            <div className=\"collection-main common\">\r\n                <Container>\r\n                    <div className=\"collection-content-main\">\r\n                        <Row className=\"align-items-center\" >\r\n                            <Col lg={6} >\r\n                                <div className=\"collection-img\">\r\n                                    <img src={about} alt=\"collection-img\" />\r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={6} >\r\n                                <div className=\"collection-content\">\r\n                                    <h5 className=\"brown\" >Previous Team Project: <br /> Doge Generals</h5>\r\n                                    <p className=\"brown\" >Doge Generals brings fascinating historical figures to life by carefully animating beautiful masterpieces, adding super dope audio, with a good dose of meme.</p>\r\n                                    <a href=\"#\" className=\"buynow\" >CLICK HERE</a>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Team;","export default __webpack_public_path__ + \"static/media/roadmap1.856c03ae.svg\";","export default __webpack_public_path__ + \"static/media/roadmap2.993f1a11.svg\";","export default __webpack_public_path__ + \"static/media/roadmap3.a8d3a256.svg\";","export default __webpack_public_path__ + \"static/media/roadmap4.2aa04ab3.svg\";","import { Container, Row, Col } from \"react-bootstrap\";\r\nimport roadmap1 from \"../../assets/image/roadmap1.svg\";\r\nimport roadmap2 from \"../../assets/image/roadmap2.svg\";\r\nimport roadmap3 from \"../../assets/image/roadmap3.svg\";\r\nimport roadmap4 from \"../../assets/image/roadmap4.svg\";\r\n\r\nconst Roadmap = () =>{\r\n    return(\r\n        <>\r\n            <div className=\"roadmap-main common\">\r\n                <Container>\r\n                    <div className=\"collection-header\">\r\n                        <h5 className=\"title brown\" >Roadmap</h5>\r\n                        <p className=\"subtitle\" >The Doge Academy art is deeply researched, hand drawn, and is based primarily on real historical figures throughout history and from all over the world. </p>\r\n                    </div>\r\n                    <Row>\r\n                        <Col xl={3} lg={12} >\r\n                            <div className=\"roadmap-content\">\r\n                                <Row className=\"align-items-center\" >\r\n                                    <Col xl={{ order: 'first' , span: 12 }} lg={{ order: 'first' , span: 8 }} md={{ order: 'first' , span: 8 }} sm={{ order: 'last' , span: 12 }} xs={{ order: 'last' , span: 12 }} >\r\n                                        <div className=\"roadmap-subcontent roadmap-subcontent-top\">\r\n                                            <h5>Phase 1</h5>\r\n                                            <ul>\r\n                                                <li>Community Building</li>\r\n                                                <li>Open Weekly Events and Lectures by \r\n                                                    experts and community members. Please reach out if you have suggestions and ideas!</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xl={{ order: 'first' , span: 12 }} lg={{ order: 'first' , span: 4 }} md={{ order: 'first' , span: 4 }} sm={{ order: 'first' , span: 12 }} xs={{ order: 'first' , span: 12 }} >\r\n                                        <div className=\"roadmap-img\" >\r\n                                            <img src={roadmap1} alt=\"roadmap\" />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xl={{ order: 'first' , span: 12 }} >\r\n                                        <div className=\"roadmap-subcontent roadmap-subcontent-blank\"></div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xl={3} lg={12} >\r\n                            <div className=\"roadmap-content roadmap-content-odd\">\r\n                                <Row className=\"align-items-center\" >\r\n                                    <Col xl={{ order: 'first' , span: 12 }}  >\r\n                                        <div className=\"roadmap-subcontent roadmap-subcontent-blank\"></div>\r\n                                    </Col>\r\n                                    <Col xl={{ order: 'first' , span: 12 }} lg={{ order: 'first' , span: 4 }} md={{ order: 'first' , span: 4 }} >\r\n                                        <div className=\"roadmap-img\" >\r\n                                            <img src={roadmap2} alt=\"roadmap\" />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xl={{ order: 'first' , span: 12 }} lg={{ order: 'first' , span: 8 }} md={{ order: 'first' , span: 8 }} >\r\n                                        <div className=\"roadmap-subcontent roadmap-subcontent-bottom\">\r\n                                            <h5>Phase 2</h5>\r\n                                            <ul>\r\n                                                <li>Expand collaborations with established projects and collect feedback from community on art and traits. </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xl={3} lg={12} >\r\n                            <div className=\"roadmap-content\">\r\n                                <Row className=\"align-items-center\" >\r\n                                    <Col xl={{ order: 'first' , span: 12 }} lg={{ order: 'first' , span: 8 }} md={{ order: 'first' , span: 8 }} sm={{ order: 'last' , span: 12 }} xs={{ order: 'last' , span: 12 }} >\r\n                                        <div className=\"roadmap-subcontent roadmap-subcontent-top\">\r\n                                            <h5>Phase 3</h5>\r\n                                            <ul>\r\n                                                <li>Minting is live! Holders chat established, community voting system published, career support and resume reviews scheduled,  and holder-only drops</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xl={{ order: 'first' , span: 12 }} lg={{ order: 'first' , span: 4 }} md={{ order: 'first' , span: 4 }} sm={{ order: 'first' , span: 12 }} xs={{ order: 'first' , span: 12 }} >\r\n                                        <div className=\"roadmap-img\" >\r\n                                            <img src={roadmap3} alt=\"roadmap\" />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xl={{ order: 'first' , span: 12 }} >\r\n                                        <div className=\"roadmap-subcontent roadmap-subcontent-blank\"></div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xl={3} lg={12} >\r\n                            <div className=\"roadmap-content roadmap-content-odd\">\r\n                                <Row className=\"align-items-center\" >\r\n                                    <Col xl={{ order: 'first' , span: 12 }} >\r\n                                        <div className=\"roadmap-subcontent roadmap-subcontent-blank\"></div>\r\n                                    </Col>\r\n                                    <Col xl={{ order: 'first' , span: 12 }} lg={{ order: 'first' , span: 4 }} md={{ order: 'first' , span: 4 }} >\r\n                                        <div className=\"roadmap-img last-roadmap-img\" >\r\n                                            <img src={roadmap4} alt=\"roadmap\" />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xl={{ order: 'first' , span: 12 }} lg={{ order: 'first' , span: 8 }} md={{ order: 'first' , span: 8 }} >\r\n                                        <div className=\"roadmap-subcontent roadmap-subcontent-bottom\">\r\n                                            <h5>Phase 4</h5>\r\n                                            <ul>\r\n                                                <li>Minted out! Collection revealed, first semester kicks off with a community selected in-depth course! </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Roadmap;","export default __webpack_public_path__ + \"static/media/slider5.59fbad0b.jpg\";","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport slider5 from \"../../assets/image/slider5.jpg\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./Simulation.css\";\r\n\r\nconst Simulation = () =>{\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        arrows: false,\r\n        autoplay: true,\r\n        speed: 2000,\r\n        autoplaySpeed: 2000,\r\n    };\r\n    return(\r\n        <>\r\n            <div className=\"simulator-main\" >\r\n                <Slider {...settings}>\r\n                    <div className=\"simulator-background\" >\r\n                        <img src={slider5} alt=\"slider1\" />\r\n                    </div>\r\n                </Slider>\r\n                <canvas id=\"canvas\"></canvas>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Simulation;","import \"./Footer.css\";\r\n\r\nconst Footer = () =>{\r\n    return(\r\n        <>\r\n            <div className=\"footer-main\">\r\n                <p>&copy; copyrights 2022 Doge Academy | All Rights Reserved.</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/mint-logo.2072c56a.svg\";","import { Col, Container, Row } from \"react-bootstrap\";\r\nimport about from \"../../assets/image/mint-logo.svg\";\r\n\r\nconst About = () =>{\r\n    return(\r\n        <>\r\n            <div className=\"collection-main about-main common\">\r\n                <Container>\r\n                    <div className=\"collection-content-main\">\r\n                        <Row className=\"align-items-center\" >\r\n                            <Col lg={5} >\r\n                                <div className=\"collection-img\">\r\n                                    <img src={about} alt=\"collection-img\" />\r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={7} >\r\n                                <div className=\"collection-content\">\r\n                                    <h5 className=\"brown\" >What is the Doge Academy?</h5>\r\n                                    <p className=\"brown\" >The Doge Academy is a community driven Web3 educational project focused on providing real world utility ranging from: </p>\r\n                                    <ul>\r\n                                        <li>1. 1 on 1 resume review and professional coaching by an expert</li>\r\n                                        <li>2. Leveraging cutting edge web3 technology to enable community to select high quality token gated courses on subjects like creating a generative NFT Collection, 3d printing, programing, or robotics. </li>\r\n                                        <li>3. Promote open public discourse on subjects like history and technology.</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default About;","import Mint from \"../Mint/Mint\";\r\nimport \"./Dashboard.css\";\r\nimport NftCollection from \"./NftCollection\";\r\nimport Team from \"./Team\";\r\nimport Roadmap from \"./Roadmap\";\r\nimport Simulation from \"../../components/Simulation/Simulation\";\r\nimport Footer from \"../../components/Layout/Footer/Footer\";\r\nimport About from \"./About\";\r\n\r\nconst Dashboard = () =>{\r\n    return(\r\n        <>\r\n            <div className=\"subsection-main\">\r\n                <Simulation />\r\n                <About />\r\n                <NftCollection />\r\n                <Roadmap />\r\n                <Team />\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","// constants\nimport { isMobile } from \"react-device-detect\";\nimport Web3 from \"web3\";\nimport TestContract from \"../../assets/abi/TestContract.json\";\ndeclare let window: any;\n\nexport const intContract = () => {\n  return async (dispatch:any) => {\n    if(window.ethereum){\n      let web3 = new Web3(window.ethereum);\n\n      // const NetworkData = await TestContract.networks[4];\n      const TestContractObj = new web3.eth.Contract(\n          TestContract.abi as any,\n          \"0x18fe1937A45fa99cf37BC8aea089e20BBE0CD0E3\"\n      );\n      dispatch(\n        contractSuccess({\n          TestContract: TestContractObj,\n        })\n      );\n    }else{\n      if (!isMobile) {\n            alert('Please install MetaMask!');\n      }\n    }\n  }\n};\n\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload:any) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst contractSuccess = (payload:any) => {\n  return {\n    type: \"CONTRACT_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload:any) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload:any) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\n\n\nexport const connect = () => {\n  \n  return async (dispatch:any) => {\n    dispatch(connectRequest());\n\n    if (window.ethereum) {\n        \n      let web3 = new Web3(window.ethereum);\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\",\n        });\n        \n        // const NetworkData = await LostStaking.networks[4];\n        if (networkId != 4) {\n          // const MoonlightObj = new web3.eth.Contract(\n          //   Moonlight.abi as any,\n          //   NetworkData.address\n          // );\n          alert(\"Please change network to Rinkeby testnet\");\n        }\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              // smartContract: MoonlightObj, \n              web3: web3,\n            })\n          );\n          // Add listeners start\n          window.ethereum.on(\"accountsChanged\", (accounts:any) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        // } else {\n        //   dispatch(connectFailed(\"Change network to Mainnet.\"));\n        // }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      if (isMobile) {\n        window.location.href = \"https://metamask.app.link/dapp/bopoverse.com/mint\";\n      }else{\n        alert(\"Install Metamask.\");\n        dispatch(connectFailed(\"Install Metamask.\"));\n      } \n   }\n  };\n};\n\nexport const updateAccount = (account:string) => {\n  return async (dispatch:any) => {\n    dispatch(updateAccountRequest({ account: account }));\n  };\n};\n","import axios from \"axios\";\n\nconst http = axios.create({\n  baseURL: \"https://thepicab.com/dognft/API/v1/\",\n  headers: {\n    // 'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Credentials': true,\n    // 'Content-Type': 'application/json',\n    \"Authorization\":\"Basic YWRtaW46MTIzNA==\",\n    \"App-Secret-Key\":\"Mn2fKZG4M1170jDlVn6lOFTN6OE27f6UO99n9QDV\",\n    \"Authorization-Token\":\"eyJ0eXA1iOi0JKV1QiL8CJhb5GciTWvLUzI1NiJ9IiRk2YXRh8Ig\",\n    // 'Access-Control-Allow-Origin': '*', \n    'Content-Type': 'application/json',\n  },\n  // withCredentials: true,\n  // auth:{\n    // username:\"admin\",\n    // password:\"1234\"\n  // }\n});\n\n\nconst get = (param:any) => {\n    return http.post(param);\n  };\n  \nconst post = (param:any,data:any = null) => {\n    return http.post(param,data);\n}\n\n\nconst Services = {   \n    get,\n    post\n};\n    \nexport default Services;\n  ","import { Col, Container, Row } from \"react-bootstrap\";\r\nimport dog from \"../../assets/image/mint-logo.svg\";\r\nimport Footer from \"../../components/Layout/Footer/Footer\";\r\nimport { ReducerStateIF } from \"../../redux/reducers\";\r\nimport \"./Mint.css\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport { connect, intContract } from \"../../redux/actions/BlockchainActions\";\r\nimport Services from \"../../components/Helper/Services\";\r\nimport keccak256 from \"keccak256\";\r\nimport { MerkleTree } from \"merkletreejs\";\r\nimport Simulation from \"../../components/Simulation/Simulation\";\r\n\r\ndeclare let window: any;\r\n\r\nconst Mint = () =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state:ReducerStateIF) => state.blockchain);\r\n    const [loding, setLoding] = useState(true);\r\n    const [price, setPrice] = useState(0);\r\n    const [maxDogwhitelist, setMaxDogWhitelist] = useState(0);\r\n    const [whitelistPrice, setWhitelistPrice] = useState(0);\r\n    const [totalNft, setTotalNft] = useState({\r\n        total:0,\r\n        minted:0 \r\n    });\r\n\r\n    useEffect(() => {\r\n        async function getNftPrice(){\r\n            const getPrice = await blockchain.TestContract.methods.cost().call();\r\n            setPrice(getPrice/10**18);\r\n\r\n            const getWhitelistprice = await blockchain.TestContract.methods.whitelistCost().call();\r\n            setWhitelistPrice(Number(getWhitelistprice));\r\n\r\n            const dogWhitelsitSupply = await blockchain.TestContract.methods.maxDogWhitelist().call();\r\n            setMaxDogWhitelist(Number(dogWhitelsitSupply));\r\n\r\n            setLoding(false);\r\n\r\n        }\r\n\r\n        if(!isMobile){\r\n            if(blockchain.TestContract === null){\r\n                dispatch(intContract());\r\n            }else{\r\n                getTotalMintedNft();\r\n                getNftPrice();\r\n            }\r\n        }else{\r\n            if (window.ethereum) {\r\n                if(blockchain.TestContract === null){\r\n                    dispatch(intContract());\r\n                }else{\r\n                    getTotalMintedNft();\r\n                    getNftPrice();\r\n                }   \r\n            }\r\n        }\r\n\r\n    },[blockchain]);\r\n\r\n    const [number, setNumber] = useState(1);\r\n    const increamentNum = () =>{\r\n        setNumber(number + 1);\r\n    }\r\n    const decreamentNum = () =>{\r\n        if(number > 1){\r\n            setNumber(number - 1);\r\n        }\r\n    }\r\n\r\n    const getTotalMintedNft = async() =>{\r\n        const maxSupplay = await blockchain.TestContract.methods.maxSupply().call();    \r\n        const totalMintToken = await blockchain.TestContract.methods.totalSupply().call();    \r\n\r\n        setTotalNft({\r\n            total:Number(maxSupplay),\r\n            minted: Number(totalMintToken)\r\n        })\r\n    }\r\n\r\n    const mintNft = async(e:any) => {\r\n        e.preventDefault();\r\n        setLoding(true);\r\n\r\n        const mintedDogList = await blockchain.TestContract.methods.DogWhitelsitSupply().call();\r\n        \r\n        let isInDoglist = false;\r\n        if(Number(mintedDogList) < maxDogwhitelist){\r\n            isInDoglist = true;\r\n        }\r\n        const isStartDoglistSale = await blockchain.TestContract.methods.saleEndtime().call();\r\n        const isWhitelist = await Services.post(\"isWhitelist\", {address:blockchain.account, isInDoglist:isInDoglist, doglistSaleStatus:Number(isStartDoglistSale)});\r\n        if(isWhitelist.data.status){\r\n\r\n            const whitelistLeave = isWhitelist.data.data.map((data:any) => keccak256(String(data.wallet)));\r\n            const tree = new MerkleTree(whitelistLeave, keccak256, { sort: true })\r\n            const merkleProof = tree.getHexProof(keccak256(String(blockchain.account)))\r\n            let mintprice = blockchain.web3.utils.toWei((Number(price)*number).toString());\r\n\r\n            if(isWhitelist.data.type == 'dogs'){\r\n                mintprice = blockchain.web3.utils.toWei(\"0\");\r\n            }else if(isWhitelist.data.type == 'alpha'){\r\n                mintprice = blockchain.web3.utils.toWei((Number(whitelistPrice)*number).toString());\r\n            }\r\n\r\n            blockchain.TestContract.methods.mint(number, merkleProof).send({ from: blockchain.account, value:Number(mintprice) }).on('transactionHash', function(hash:any){\r\n                waitForReceipt(hash, async function(response:any) {\r\n                    if(response.status){\r\n                        \r\n                        setNumber(1);\r\n                        alert(\"Nft Mint successfully\");\r\n                        setLoding(false);\r\n                        \r\n                    }else{\r\n                        alert(response.msg);\r\n                        setLoding(false);\r\n                    } \r\n                    \r\n                });\r\n            }).on('error', function(error:any, receipt:any) {\r\n                alert(error.message);\r\n                setLoding(false);\r\n            });\r\n\r\n        }else{\r\n            alert(isWhitelist.data.msg);\r\n            setLoding(false);\r\n        }\r\n    }\r\n\r\n    const waitForReceipt = async (hash:any, cb:any) => {\r\n            blockchain.web3.eth.getTransactionReceipt(hash, function (err:any, receipt :any) {\r\n            if (err) {\r\n                console.log(err);\r\n            }  \r\n        \r\n            if (receipt !== null) {\r\n                if (cb) {\r\n                    if(receipt.status == '0x0') {\r\n                        cb({status:false, msg: \"The contract execution was not successful, check your transaction !\"});\r\n                    } else {\r\n                        cb({status:true, msg:\"Execution worked fine!\"});\r\n                    }\r\n                }\r\n            } else {\r\n                window.setTimeout(function () {\r\n                    waitForReceipt(hash, cb);\r\n                }, 1000);\r\n            }\r\n            });\r\n    } \r\n\r\n    return(\r\n        <>\r\n            <div className=\"subsection-main\">\r\n                <Simulation />\r\n                <div className=\"mint-main\">\r\n                    <Container>\r\n                        <Row className=\"align-items-center\" >\r\n                            <Col xl={{ order: 1 , span: 7 }} lg={{ order: 1 , span: 6 }} md={{ order: 2 , span: 12 }} sm={{ order: 2 , span: 12 }} xs={{ order: 2 , span: 12 }} >\r\n                                <div className=\"mintbox-image\" >\r\n                                    <img src={dog} alt=\"logo\" />\r\n                                    <h5>The <br /> Doge <br /> Academy</h5>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xl={{ order: 2 , span: 5 }} lg={{ order: 2 , span: 6 }} md={{ order: 1 , span: 12 }} sm={{ order: 1 , span: 12 }} xs={{ order: 1 , span: 12 }} >\r\n                                <div className=\"mintbox-main\" >\r\n                                    <div className=\"mintbox-main-content\">\r\n                                        <div className=\"mintbox-header\">\r\n                                            <h5 className=\"brown\" >PreSale Mint NFTs</h5>\r\n                                            <p>{totalNft.minted}/{totalNft.total} NFTs Minted</p>\r\n                                        </div>\r\n                                        <form name=\"mintform\" method=\"post\" onSubmit={mintNft}>\r\n                                            <div className=\"mintbox-body\">\r\n                                                <div className=\"mintbox-content\" >\r\n                                                    <Col lg={12} >\r\n                                                        <div className=\"mintbox-subcontent\" >\r\n                                                            <Row>\r\n                                                                <Col xs={4} >\r\n                                                                    <p>Price</p>\r\n                                                                </Col>\r\n                                                                <Col xs={8} >\r\n                                                                    <h5 className=\"text-center\" >{price}</h5>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </div>\r\n                                                <div className=\"mintbox-content\" >\r\n                                                    <Col lg={12} >\r\n                                                        <div className=\"mintbox-subcontent\" >\r\n                                                            <Row className=\"align-items-center\" >\r\n                                                                <Col xs={4} >\r\n                                                                    <p>Amount</p>\r\n                                                                </Col>\r\n                                                                <Col xs={8} className=\"text-center\" >\r\n                                                                    <h5><span onClick={decreamentNum}>-</span>{number}<span onClick={increamentNum}>+</span></h5>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </div>\r\n                                                <div className=\"mintbox-content\" >\r\n                                                    <Col lg={12} >\r\n                                                        <div className=\"mintbox-subcontent\" >\r\n                                                            <Row>\r\n                                                                <Col xs={4} >\r\n                                                                    <p>Total</p>\r\n                                                                </Col>\r\n                                                                <Col xs={8} >\r\n                                                                    <h5 className=\"text-center\" >{price*number}</h5>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </div>\r\n                                            </div>\r\n                                            <>\r\n                                                {\r\n                                                    (blockchain.account == null)?(\r\n                                                        <button onClick={(e) => {\r\n                                                            e.preventDefault();\r\n                                                            dispatch(connect());\r\n                                                        }}  className=\"buynow\"> CONNECT</button>\r\n                                                    ):(\r\n                                                        <>\r\n                                                            { !loding?(                                            \r\n                                                                <>\r\n                                                                    <button type=\"submit\" className=\"buynow\">CLAIM NFT</button>\r\n                                                                    <h6>Wallet Id : {blockchain.account.substring(0, 5)+'...'+blockchain.account.slice(-5)}</h6>\r\n                                                                </>\r\n                                                            ):(\r\n                                                                <button type=\"button\" className=\"buynow\" disabled>Wait...</button>\r\n                                                            )}\r\n                                                        </>\r\n                                                    )\r\n                                                }\r\n                                            </>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div className=\"backgroundcolor-mint\" ></div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Mint","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../screens/Dashboard/Dashboard\";\nimport Mint from \"../screens/Mint/Mint\";\n\nconst AppMain = () => {\n    return (\n        <>\n            <Suspense fallback={<span>loading</span>}>\n                <Switch>\n                    <Route exact path=\"/\" component={Dashboard} />\n                    <Route exact path=\"/mint\" component={Mint} />\n                </Switch>\n            </Suspense>\n        </>\n    );\n};\n\nexport default AppMain;\n","import React from 'react';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport './App.css';\nimport Routes from './routes';\n\nconst App = () =>{\n  return(\n    <>\n      <Provider store={store}>\n        <BrowserRouter basename={'dognft'}>\n          <Switch>\n            <Routes />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}